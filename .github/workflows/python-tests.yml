name: E2E Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest  # Using ubuntu-latest is generally recommended

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4  # Using the latest version

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5  # Using the latest version
        with:
          python-version: "3.x"  # Use the latest stable Python 3

      - name: 📦 Set up dependencies and browsers
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npx playwright install --with-deps ${{ matrix.browser }} # Install only the needed browser

      - name: 🧪 Run tests on ${{ matrix.browser }}
        run: pytest --browser ${{ matrix.browser }} -v --junitxml=junit-${{ matrix.browser }}.xml
        continue-on-error: true # Allow other browsers to continue testing if one fails

      - name: 📊 Upload test report for ${{ matrix.browser }}
        uses: actions/upload-artifact@v3
        with:
          name: test-report-${{ matrix.browser }}
          path: junit-${{ matrix.browser }}.xml
        if: always() # Ensure upload even if tests fail

      - name: 💾 Upload failure artifacts for ${{ matrix.browser }}
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
        if: failure() # Only upload if tests fail

      - name: 🚦 Summarize test results
        if: always()
        run: |
          echo "Test results summary:"
          echo "Chromium: $(if [ -f "junit-chromium.xml" ]; then grep -o '<testcase' junit-chromium.xml | wc -l; else echo "N/A"; fi) tests"
          echo "Firefox: $(if [ -f "junit-firefox.xml" ]; then grep -o '<testcase' junit-firefox.xml | wc -l; else echo "N/A"; fi) tests"
          echo "WebKit: $(if [ -f "junit-webkit.xml" ]; then grep -o '<testcase' junit-webkit.xml | wc -l; else echo "N/A"; fi) tests"
          # You can add more detailed summaries or failure counts here